Task1

less1
Задачи
Ввести целое число в консоли и вывести на экран последнюю цифру введенного числа.
Ввести целое трехзначное число в консоли и найти сумму цифр этого трехзначного числа
Ввести целое число в консоли. Если оно является положительным, то прибавить к нему 1, в противном случае не изменять его. Вывести полученное число.
Ввести целое число в консоли. Если оно является положительным, то прибавить к нему 1; если отрицательным, то вычесть из него 2; если нулевым, то заменить его на 10. Вывести полученное число.
Ввести три целых числа с консоли. Вывести на экран наименьшее из них.
Ввести целое число в консоли. Вывести его строку-описание вида «отрицательное четное число», «нулевое число» «положительное нечетное число» и т. д.
Написать программу, вычисляющую стоимость 10 минутного междугороднего разговора в зависимости от кода города. ( Москва(905) - 4.15руб. Ростов(194) - 1.98руб. Краснодар(491) - 2.69руб. Киров(800) - 5.00руб. ). Пользователь в консоли должен ввести код города, а в ответ от программы получить, например, при вводе кода 905, - «Москва. Стоимость разговора: 41.5»
Дан массив целых чисел: [1,-10,5,6,45,23,-45,-34,0,32,56,-1,2,-2]. Для данного массива найти и вывести на экран:
максимальное значение
сумму положительных элементов
сумму четных отрицательных элементов
количество положительных элементов
среднее арифметическое отрицательных элементов
Дан массив целых чисел: [15,10,51, 6, 5,3,-10,34,0,32,56,-12,24, 52]. Переставить элементы массива в обратном порядке. Вывести результат в консоль
Дан массив целых чисел: [15,10,0,-6,-5,3,0,-34,0,32,56,0,24,-52]. Переместить нули в конец массива. Вывести результат в консоль

Task2

less2
Animal:
Создать класс less2.Animal.Animal и расширяющие его классы Dog, Cat, less4.Horse.
Класс less2.Animal.Animal содержит переменные food, location и методы makeNoise, eat, sleep.
Метод makeNoise, например, может выводить на консоль "Такое-то животное спит".
Dog, Cat, less4.Horse переопределяют методы makeNoise, eat.
Добавьте переменные в классы Dog, Cat, less4.Horse, характеризующие только этих животных.
Создайте класс Ветеринар, в котором определите метод void treatAnimal(less2.Animal.Animal animal).
Пусть этот метод распечатывает food и location пришедшего на прием животного.
В методе main создайте массив типа less2.Animal.Animal, в который запишите животных всех имеющихся у вас типов.
В цикле отправляйте их на прием к ветеринару

University:
Создайте пример наследования, реализуйте класс Student и класс Aspirant,
аспирант отличается от студента наличием некой научной работы.
Класс Student содержит переменные: String firstName, lastName, group. А также, double averageMark, содержащую среднюю оценку.
Создать переменную типа Student, которая ссылается на объект типа Aspirant.
Создать метод getScholarship() для класса Student, который возвращает сумму стипендии.
Если средняя оценка студента равна 5, то сумма 100, иначе 80.
Переопределить этот метод в классе Aspirant. Если средняя оценка аспиранта равна 5, то сумма 200, иначе 180.
Создать массив типа Student, содержащий объекты класса Student и Aspirant.
Вызвать метод getScholarship() для каждого элемента массива.

Task3

less3
Flowers:
Необходимо реализовать иерархию цветов (для примера, пусть это будут розы, гвоздики, тюльпаны и… что-то на свой вкус).
Создать несколько объектов-цветов. Собрать 3 букета (используем массив) с определением их стоимости.
В букет может ходить несколько цветов одного типа.
Класс "less3.Flower.Flower" должен содержать метод определяющий стоимость цветка, этот метод переопределить в классах наследниках.
Также подсчитать количество проданных цветов (используем статический метод).

Car:
Создать абстрактный класс класс Car, и класс Engine.
Класс Engine содержит поля - мощность, производитель.
Класс Car содержит поля - марка автомобиля, класс автомобиля, вес, мотор типа Engine.
Абстрактные методы start(), stop(), и реализованные методы turnRight(), turnLeft() Методы turnRight() и turnLeft()
выводят на экран: "Поворот направо" или "Поворот налево". Абстрактный метод printInfo(), который выводит полную информацию
об автомобиле, и моторе. Создать производный от Саr класс - Lorry (грузовик), характеризуемый также грузоподъемностью кузов.
реализовать методы start(), stop(). Метод start - выводит на экран «Грузовик поехал», метод stop - «грузовик остановился».
Создать производный от Car класс - SportCar, характеризуемый также предельной скоростью start(), stop().
Метод start - выводит на экран «SportCar поехал», метод stop - «SportCar остановился».

Task4

less4
1.
Создать базовый класс Animal с полями:
private boolean vegetarian;
private String eats;
private int noOflegs;
На его основе создать подкласс Cat с полями суперкласса и private String color.
2.
Cоздать базовый класс Building. На его основе создать подклассы: House,School,Library,Supermarket.
3.
Cоздать базовый класс Horse. На его основе создать подклассы: Zebra,Donkey,Pegasus.
4.
Cоздать базовый класс Food. На его основе создать подклассы: Starter,Soup,Salad,MainDish.
5.
Cоздать базовый класс FootWear. На его основе создать подклассы: Shoes,Trainers,Boots,HighShoes,Sandals,Slippers.

Task5

less5
1.Написать программу, которая проверяет, является ли строка палиндромом
2.Реализовать удаление повторяющихся символов в строке
3.Реализовать проверку, являются ли две строки анаграммами
4.Напишите Java-программу для лексикографического сравнения двух строк.
5.Напишите Java-программу для лексикографического сравнения двух строк, игнорируя различия в регистре.
6.Напишите программу на Java для объединения данной строки в конец другой строки.
7.Напишите Java-программу для сравнения заданной строки с указанной последовательностью символов.
8.Напишите программу на Java, чтобы проверить, заканчивается ли данная строка содержимым другой строки.
9.Напишите программу на Java, чтобы проверить, содержат ли два объекта String одинаковые данные.
10.Напишите Java-программу, чтобы получить длину заданной строки.
11.Напишите программу на Java, чтобы преобразовать все символы строки в нижний регистр.
12.Напишите программу на Java, чтобы преобразовать все символы в строке в верхний регистр.
13.Напишите программу на Java, чтобы найти второй по частоте символ в данной строке.
14.Напишите программу на Java для печати после удаления дубликатов из заданной строки.
15.Напишите программу на Java, чтобы найти первый неповторяющийся символ в строке.
16.Напишите программу на Java, которая возвращает true из заданной строки, если первые два символа в строке также появляются в конце.
17.Напишите программу на Java, которая возвращает количество символов, появляющихся три раза подряд в строке.
18.Напишите программу на Java, которая возвращает сумму цифр, присутствующих в строке. Если цифр нет, возвращаемая сумма равна 0.